{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["export default class Compress {\n    /**\n     * opts\n     *\n     * @param width   获取的图像大小\n     * @param type    指定图片格式\n     * @param quality 图片质量 0～1 ， 0.92 为默认值\n     */\n    constructor () {\n        this.opts = {\n            width: 300,\n            type: 'image/jpeg',\n            quality: 0.92,\n            success () {},\n            error (err) {\n                alert(err);\n            }\n        };\n    }\n\n    /**\n     * 图片压缩\n     * @param file\n     * @param option\n     */\n    image (file, option) {\n        if (typeof file !== 'object' || typeof file.name !== 'string') {\n            this.opts.error('请传入fileList对象');\n            return false;\n        }\n\n        let ext = this.getFileExt(file.name);\n\n        if (ext !== 'jpg' && ext !== 'jpeg' && ext !== 'png') {\n            this.opts.error('只支持 jpg, png');\n            return false;\n        }\n\n        this.opts = Object.assign(this.opts, option);\n        this.base64(this.getObjectURL(file), this.opts.success);\n    }\n\n    /**\n     * 图片转base64\n     * @param fileUrl\n     * @param fn\n     */\n    base64 (fileUrl, fn) {\n        let img = new Image();\n        img.src = fileUrl;\n\n        img.onload = () => {\n            let canvas = document.createElement('canvas');\n            let ctx    = canvas.getContext('2d');\n\n            let width = this.opts.width;\n            let height = width * img.height / img.width;\n\n            ctx.fillStyle = 'none';\n            canvas.width = width;\n            canvas.height = height;\n\n            ctx.drawImage(img, 0, 0, width, height);\n\n            fn(canvas.toDataURL(this.opts.type, this.opts.quality));\n        };\n    }\n\n    /**\n     * 获取file对象链接\n     * @param file\n     * @returns {*}\n     */\n    getObjectURL (file) {\n        var url = null;\n\n        if (window.URL) {\n            url = window.URL.createObjectURL(file);\n        } else if (window.webkitURL) {\n            url = window.webkitURL.createObjectURL(file);\n        } else {\n            file.select();\n            file.blur();\n            url = document.selection.createRange().text;\n        }\n        return url;\n    }\n\n    /**\n     * 获取文件拓展名\n     * @param str\n     * @returns {string}\n     */\n    getFileExt (str) {\n        return str.substr(str.lastIndexOf('.') + 1).toLowerCase();\n    }\n}"],"names":["opts","err","file","option","name","error","ext","this","getFileExt","Object","assign","base64","getObjectURL","success","fileUrl","fn","img","Image","src","onload","canvas","document","createElement","ctx","getContext","width","_this","height","fillStyle","drawImage","toDataURL","type","quality","url","window","URL","createObjectURL","webkitURL","select","blur","selection","createRange","text","str","substr","lastIndexOf","toLowerCase"],"mappings":"swBASaA,YACM,SACD,qBACG,wCAEFC,SACGA,6CAUXC,EAAMC,MACW,qBAATD,gBAAAA,KAA0C,iBAAdA,EAAKE,iBACnCJ,KAAKK,MAAM,kBACT,MAGPC,EAAMC,KAAKC,WAAWN,EAAKE,SAEnB,QAARE,GAAyB,SAARA,GAA0B,QAARA,cAC9BN,KAAKK,MAAM,iBACT,OAGNL,KAAOS,OAAOC,OAAOH,KAAKP,KAAMG,QAChCQ,OAAOJ,KAAKK,aAAaV,GAAOK,KAAKP,KAAKa,wCAQ3CC,EAASC,cACTC,EAAM,IAAIC,QACVC,IAAMJ,IAENK,OAAS,eACLC,EAASC,SAASC,cAAc,UAChCC,EAASH,EAAOI,WAAW,MAE3BC,EAAQC,EAAK1B,KAAKyB,MAClBE,EAASF,EAAQT,EAAIW,OAASX,EAAIS,QAElCG,UAAY,SACTH,MAAQA,IACRE,OAASA,IAEZE,UAAUb,EAAK,EAAG,EAAGS,EAAOE,KAE7BP,EAAOU,UAAUJ,EAAK1B,KAAK+B,KAAML,EAAK1B,KAAKgC,gDASxC9B,OACN+B,EAAM,YAENC,OAAOC,MACDD,OAAOC,IAAIC,gBAAgBlC,GAC1BgC,OAAOG,YACRH,OAAOG,UAAUD,gBAAgBlC,MAElCoC,WACAC,SACClB,SAASmB,UAAUC,cAAcC,MAEpCT,qCAQCU,UACDA,EAAIC,OAAOD,EAAIE,YAAY,KAAO,GAAGC"}